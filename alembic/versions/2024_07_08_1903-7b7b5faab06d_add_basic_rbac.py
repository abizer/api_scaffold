"""add basic rbac

Revision ID: 7b7b5faab06d
Revises: 
Create Date: 2024-07-08 19:03:25.478918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel # added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7b7b5faab06d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rbac_resources',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('resource_id')
    )
    op.create_index(op.f('ix_rbac_resources_name'), 'rbac_resources', ['name'], unique=True)

    op.create_table('rbac_roles',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('has_read', sa.Boolean(), nullable=False),
    sa.Column('has_write', sa.Boolean(), nullable=False),
    sa.Column('has_delete', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rbac_roles_id'), 'rbac_roles', ['id'], unique=False)
    op.create_index(op.f('ix_rbac_roles_name'), 'rbac_roles', ['name'], unique=True)

    op.create_table('rbac_users',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_rbac_users_id'), 'rbac_users', ['id'], unique=False)

    op.create_table('rbac_keys',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('role_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['rbac_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['rbac_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rbac_keys_id'), 'rbac_keys', ['id'], unique=False)
    op.create_index(op.f('ix_rbac_keys_key'), 'rbac_keys', ['key'], unique=True)

    op.create_table('rbac_orgs',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['rbac_resources.resource_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rbac_orgs_id'), 'rbac_orgs', ['id'], unique=False)
    op.create_index(op.f('ix_rbac_orgs_name'), 'rbac_orgs', ['name'], unique=True)

    op.create_table('rbac_role_resource_associations',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('role_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['rbac_resources.resource_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['rbac_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rbac_role_resource_associations_id'), 'rbac_role_resource_associations', ['id'], unique=False)
    op.create_index(op.f('ix_rbac_role_resource_associations_resource_id'), 'rbac_role_resource_associations', ['resource_id'], unique=False)
    op.create_index(op.f('ix_rbac_role_resource_associations_role_id'), 'rbac_role_resource_associations', ['role_id'], unique=False)

    op.create_table('rbac_projects',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('organization_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['rbac_orgs.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['rbac_resources.resource_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rbac_projects_id'), 'rbac_projects', ['id'], unique=False)
    
    op.create_table('rbac_docs',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['rbac_projects.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['rbac_resources.resource_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rbac_docs_id'), 'rbac_docs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rbac_docs_id'), table_name='rbac_docs')
    op.drop_table('rbac_docs')
    op.drop_index(op.f('ix_rbac_projects_id'), table_name='rbac_projects')
    op.drop_table('rbac_projects')
    op.drop_index(op.f('ix_rbac_role_resource_associations_role_id'), table_name='rbac_role_resource_associations')
    op.drop_index(op.f('ix_rbac_role_resource_associations_resource_id'), table_name='rbac_role_resource_associations')
    op.drop_index(op.f('ix_rbac_role_resource_associations_id'), table_name='rbac_role_resource_associations')
    op.drop_table('rbac_role_resource_associations')
    op.drop_index(op.f('ix_rbac_orgs_name'), table_name='rbac_orgs')
    op.drop_index(op.f('ix_rbac_orgs_id'), table_name='rbac_orgs')
    op.drop_table('rbac_orgs')
    op.drop_index(op.f('ix_rbac_keys_key'), table_name='rbac_keys')
    op.drop_index(op.f('ix_rbac_keys_id'), table_name='rbac_keys')
    op.drop_table('rbac_keys')
    op.drop_index(op.f('ix_rbac_users_id'), table_name='rbac_users')
    op.drop_table('rbac_users')
    op.drop_index(op.f('ix_rbac_roles_name'), table_name='rbac_roles')
    op.drop_index(op.f('ix_rbac_roles_id'), table_name='rbac_roles')
    op.drop_table('rbac_roles')
    op.drop_index(op.f('ix_rbac_resources_name'), table_name='rbac_resources')
    op.drop_table('rbac_resources')
    # ### end Alembic commands ###
